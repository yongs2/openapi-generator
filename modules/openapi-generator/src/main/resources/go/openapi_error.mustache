{{>partial_header}}
package openapi_common

// GenericOpenAPIError Provides access to the body, error and model on returned errors.
type GenericOpenAPIError struct {
	RawBody  []byte
	ErrorStatus string
	ErrorModel interface{}
}

// Error returns non-empty string if there was an error.
func (e GenericOpenAPIError) Error() string {
	return e.ErrorStatus
}

// Body returns the raw bytes of the response
func (e GenericOpenAPIError) Body() []byte {
	return e.RawBody
}

// Model returns the unpacked model of the error
func (e GenericOpenAPIError) Model() interface{} {
	return e.ErrorModel
}

// FormatErrorMessage - format error message using title and detail when model implements rfc7807
func FormatErrorMessage(status string, v interface{}) string {
	str := ""
	metaValue := reflect.ValueOf(v).Elem()

	field := metaValue.FieldByName("Title")
	if field != (reflect.Value{}) {
		str = fmt.Sprintf("%s", field.Interface())
	}

	field = metaValue.FieldByName("Detail")
	if field != (reflect.Value{}) {
		str = fmt.Sprintf("%s (%s)", str, field.Interface())
	}

	// status title (detail)
	return strings.TrimSpace(fmt.Sprintf("%s %s", status, str))
}
